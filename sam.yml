Transform: AWS::Serverless-2016-10-31

Resources:
  BucketContent:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - "GET"
              - "HEAD"
            AllowedHeaders:
              - "*"
            AllowedOrigins:
              - "*"

  ResponseHeaderPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: ResponseHeaderPolicy
        CustomHeadersConfig:
          Items:
            - Header: "Cache-Control"
              Value: "no-store, no-cache"
              Override: true

  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Ref BucketContent
        SigningProtocol: sigv4
        SigningBehavior: always
        OriginAccessControlOriginType: s3

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: !GetAtt BucketContent.RegionalDomainName
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
            DomainName: !GetAtt BucketContent.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultCacheBehavior:
          TargetOriginId: !GetAtt BucketContent.RegionalDomainName
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          ResponseHeadersPolicyId: !Ref ResponseHeaderPolicy
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
        PriceClass: PriceClass_All
        Enabled: true
        HttpVersion: http2and3
        IPV6Enabled: true

  QueueCreateSummary:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 120

  TopicMessageHub:
    Type: AWS::SNS::Topic

  QueuePolicyCreateSummary:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref QueueCreateSummary
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource:
              - !GetAtt QueueCreateSummary.Arn
            Action: sqs:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref TopicMessageHub

  RoleGetRuntimeVersion:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: destination
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: sns:Publish
                Resource: !Ref TopicMessageHub

  StackPython38:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: stack_get_version.yml
      Parameters:
        Handler: handlers/get_version/python.handler
        Runtime: python3.8
        RoleArn: !GetAtt RoleGetRuntimeVersion.Arn
        TopicArn: !Ref TopicMessageHub

Outputs:
  DomainNameCloudFront:
    Value: !GetAtt Distribution.DomainName
